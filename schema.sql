-- Object Type for Address (optional feature using Oracle Object-Relational Model)
create or replace type address_type as object (
      street      varchar2(100),
      city        varchar2(50),
      country     varchar2(50),
      postal_code varchar2(20)
);
/
create sequence admin_seq start with 1 increment by 1;
create sequence trip_seq start with 1 increment by 1;
create sequence booking_seq start with 1 increment by 1;
create sequence customer_seq start with 1 increment by 1;
create sequence agency_seq start with 1 increment by 1;

create table agency (
   agency_id           number
      generated by default on null as identity
   primary key,
   name                varchar2(100) not null,
   email               varchar2(100) unique not null,
   phone               varchar2(20),
   address_obj         address_type,
   profile_description clob
);

create table admin (
   admin_id      number primary key,
   agency_id     number
      references agency ( agency_id ),
   name          varchar2(100),
   email         varchar2(50) unique,
   password_hash varchar2(255)
);

-- Customers Table
create table customer (
   customer_id number
      generated by default on null as identity
   primary key,
   name        varchar2(100),
   email       varchar2(100) unique not null,
   phone       varchar2(20),
   address     varchar2(200)
);

-- Trips Table (horizontally fragmented per agency in distributed context)
create table trip (
   trip_id         number
      generated by default on null as identity
   primary key,
   agency_id       number
      references agency ( agency_id ),
   title           varchar2(150) not null,
   location        varchar2(100),
   itinerary       clob,
   start_date      date,
   end_date        date,
   price           number(10,2),
   slots_available number
);

create table package (
   package_id      number
      generated always as identity
   primary key,
   agency_id       number
      references agency ( agency_id ),
   title           varchar2(150) not null,
   destination     varchar2(100),
   itinerary       varchar2(1000),
   duration        varchar2(100),
   price           number(10,2),
   slots_available number,
   description     varchar2(1000) not null,
   image_path      varchar2(255),
   status          varchar2(20) default 'active'
);




create table destination (
   id          number
      generated always as identity,
   name        varchar2(100) not null,
   country     varchar2(100) not null,
   description varchar2(1000) not null,
   image_path  varchar2(255),
   status      varchar2(20) default 'active',
   created_at  timestamp default current_timestamp,
   primary key ( id )
);

create sequence destination_seq start with 1 increment by 1;

drop table booking;
create table booking (
   booking_id   number
      generated always as identity
   primary key,
   customer_id  number
      references customer ( customer_id ),
   package_id   number
      references package ( package_id ),
   booking_date timestamp default current_timestamp,
   travel_date  date not null,
   participants number not null,
   total_amount number(10,2) not null,
   status       varchar2(20) default 'pending' check ( status in ( 'pending',
                                                             'confirmed',
                                                             'cancelled' ) )
);

insert into customer (
   name,
   email,
   phone,
   address
) values ( 'Boumedien sarah',
           'sarah.boumedien@example.com',
           '1234567890',
           'Batna' );